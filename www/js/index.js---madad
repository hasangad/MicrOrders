Skip to content
This repository
Search
Pull requests
Issues
Marketplace
Explore
 @hasangad
 Sign out
 Unwatch 1
  Star 0  Fork 0 hasangad/MR
 Code  Issues 0  Pull requests 0  Projects 0  Wiki  Insights  Settings
Branch: master Find file Copy pathMR/js/index.js
d83b4a4  on Sep 14
@hasangad hasangad Update index.js
1 contributor
RawBlameHistory     
110 lines (88 sloc)  2.99 KB
$(document).ready(function(){
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var app = {
    // Application Constructor
    initialize: function() {
        this.bindEvents();
    },
    // Bind Event Listeners
    //
    // Bind any events that are required on startup. Common events are:
    // 'load', 'deviceready', 'offline', and 'online'.
    bindEvents: function() {
        document.addEventListener('deviceready', this.onDeviceReady, false);
    },
    // deviceready Event Handler
    //
    // The scope of 'this' is the event. In order to call the 'receivedEvent'
    // function, we must explicitly call 'app.receivedEvent(...);'
    onDeviceReady: function() {
        app.receivedEvent('deviceready');
    },
    // Update DOM on a Received Event
    receivedEvent: function(id) {
        var parentElement = document.getElementById(id);
        var listeningElement = parentElement.querySelector('.listening');
        var receivedElement = parentElement.querySelector('.received');

        listeningElement.setAttribute('style', 'display:none;');
        receivedElement.setAttribute('style', 'display:block;');

        console.log('Received Event: ' + id);
    }
};

	
	var push = PushNotification.init({
    android: {
        senderID: "1067921236443"
    },
    ios: {
        senderID: "1067921236443",
        gcmSandbox: true,
        alert: "true",
        badge: true,
        sound: 'true'
    },
    windows: {}
});
	
	
/*function exitFromApp()
             {
				 
				 //alert("test");
                navigator.app.exitApp();
             }*/
			 
			 // Wait for PhoneGap to load
/*document.addEventListener("deviceready", onDeviceReady, false);
function onDeviceReady() {
	
    //alert("deviceready");
    document.getElementsByClassName('exit_app').addEventListener('click', function() {
		
		//alert("test");
        navigator.app.exitApp();
    });
}*/
	
	
			 // Wait for PhoneGap to load
//document.addEventListener("deviceready", onDeviceReady, false);
			  //alert("Document is ready");

function onDeviceReady() {
	
    //alert("deviceready");
	$(".exit_app").click(function() {
    //document.getElementsByClassName('exit_app').addEventListener('click'
		
		//alert("Test Exit App");
        navigator.app.exitApp();
    });
}
			
			
onDeviceReady();



});
